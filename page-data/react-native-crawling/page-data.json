{
    "componentChunkName": "component---src-templates-post-template-tsx",
    "path": "/react-native-crawling/",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h1 id=\"React-Native에서의-크롤링\" style=\"position:relative;\">React Native에서의 크롤링<a href=\"#React-Native%EC%97%90%EC%84%9C%EC%9D%98-%ED%81%AC%EB%A1%A4%EB%A7%81\" aria-label=\"React Native에서의 크롤링 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<p>내일배움단에서 배운 것들을 복습하려고 앱을 만들기 위해 크롤링이 필요해서 JavaScript로 크롤링 하는 법을 학습했다. 그런데 React Native에서 하는 방법은 약간 다르다고 한다. 따라서 그 방법에 대해서 기록하고자 한다. 우선 'cheerio' 라이브러리의 경우 'cheerio-without-node-native'로 대체해서 사용해야 하며 업데이트가 잦아 라이브러리가 따라오지 못하는 문제를 해결하기 위해 fetch를 사용하는 것이 좋다. 크롤링 기본 세팅 코드는 아래와 같다.</p>\n<pre><code class=\"language-javascript\">const cheerio = require(\"cheerio-without-node-native\");\n// const request = require(\"requestretry\");\n\nexport default async function getPage() {\n\tlet result = [];\n\tlet ulList = [];\n\t// 전체 페이지 리스트 구하기\n\tlet url = `크롤링할 데이터가 있는 url`;\n\tconst options = {\n\t\tmethod: \"GET\",\n\t\tencoding: null,\n\t\theaders: {\n\t\t\t\"User-Agent\":\n\t\t\t\t\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36\",\n\t\t\tAccept:\n\t\t\t\t\"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\",\n\t\t\t\"Content-Type\": \"application/x-www-form-urlencoded\",\n\t\t\tCookie:\n\t\t\t\t\"WMONID=m2zajRZqm5f; _ga=GA1.2.1860211416.1622781690; _gid=GA1.2.882171542.1623936429; JSESSIONID=DFFB23E27EFF9769B473D12C31A83487; _gat=1\",\n\t\t},\n\t};\n\n\tlet html = await fetch(url, options);\n\tlet responseOK = html &#x26;&#x26; html.ok;\n\tif (responseOK) {\n\t\tlet data = await html.text();\n\t\tconst $ = cheerio.load(data);\n\n        /*\n         (입맛에 맞게 코딩)\n        */*\n\t}\n}\n</code></pre>\n<p>요소를 선택할 때는 아래와 같은 방식으로 사용한다</p>\n<pre><code class=\"language-javascript\">const $list = $(\"선택할 요소\").toArray();\n\t\tconst $maxPageNum = $(\"선택할 요소\")\n\t\t\t.text()\n\t\t\t.split(\"/\")[1];\n\t\t$list.map((el, idx) => {\n\t\t\tulList[idx] = parseInt($(el).attr(\"onclick\").split(\"'\")[1]);\n</code></pre>","tableOfContents":"<ul>\n<li><a href=\"#react-native%EC%97%90%EC%84%9C%EC%9D%98-%ED%81%AC%EB%A1%A4%EB%A7%81\">React Native에서의 크롤링</a></li>\n</ul>","frontmatter":{"title":"React Native에서 크롤링 하기","summary":"ReactNative에서의 크롤링 방법","date":"2022.03.10.","categories":["ReactNative"]}}}]}},"pageContext":{"slug":"/react-native-crawling/"}},
    "staticQueryHashes": []}